<div class="container">
    <div class="row">
      <div class="one-column" style="margin-top: 10%">
        <h1>Dissecting a JSON Response</h1>
        <h5>On this page we will be looking at what a JSON response actualy looks like. We will then learn how to pick out what we specifically want from the response.</h5>

        <p>You may be thinking that after our fancy call to a specific tweet that we will just get the tweet's text back. NOPE. We will be returning a whole smorgsboard of attributes related to a tweet object. Don't freak out.</p>

        <h3>An unfiltered Twitter JSON Object</h3>
        <pre style="max-height: 300px"><code>
            HTTP/1.1 200 OK
            x-frame-options:SAMEORIGIN
            x-rate-limit-remaining:178
            last-modified: Fri, 20 May 2016 03:07:20 GMT
            status:200 OK
            Content-Length:2032
            x-response-time:38
            Connection:keep-alive
            x-transaction:bb60d5eb21b68fb0
            Server:tsa_b
            pragma:no-cache
            cache-control:no-cache, no-store, must-revalidate, pre-check=0, post-check=0
            x-connection-hash:407abbdac217b74f95725efcbc18960e
            x-xss-protection:1; mode=block
            x-content-type-options:nosniff
            x-rate-limit-limit:180
            expires:Tue, 31 Mar 1981 05:00:00 GMT
            Date:Fri, 20 May 2016 03:07:20 GMT
            set-cookie:lang=en; Path=/
            set-cookie:guest_id=v1%3A146371364032652342; Domain=.twitter.com; Path=/; Expires=Sun, 20-May-2018 03:07:20 UTC
            x-rate-limit-reset:1463713676
            content-disposition:attachment; filename=json.json
            x-twitter-response-tags:BouncerCompliant
            strict-transport-security:max-age=631138519
            x-access-level:read-write-directmessages
            Content-Type:application/json;charset=utf-8
            {
              "created_at": "Tue May 17 15:35:41 +0000 2016",
              "id": 732595450746970100,
              "id_str": "732595450746970112",
              "text": "AN ANGRY TEST.",
              "truncated": false,
              "entities":  {
                "hashtags":  [],
                "symbols":  [],
                "user_mentions":  [],
                "urls":  []
            },
              "source": "<a href="http://twitter.com" rel="nofollow">Twitter Web Client</a>",
              "in_reply_to_status_id": null,
              "in_reply_to_status_id_str": null,
              "in_reply_to_user_id": null,
              "in_reply_to_user_id_str": null,
              "in_reply_to_screen_name": null,
              "user":  {
                "id": 731282217935208400,
                "id_str": "731282217935208448",
                "name": "theabrasivebot",
                "screen_name": "theAbrasiveBot",
                "location": "Scranton, PA",
                "description": "a very angry, temperamental robot",
                "url": null,
                "entities":  {
                  "description":  {
                    "urls":  []
                  }
                },
                "protected": false,
                "followers_count": 0,
                "friends_count": 0,
                "listed_count": 0,
                "created_at": "Sat May 14 00:37:22 +0000 2016",
                "favourites_count": 0,
                "utc_offset": -25200,
                "time_zone": "Pacific Time (US & Canada)",
                "geo_enabled": false,
                "verified": false,
                "statuses_count": 3,
                "lang": "en",
                "contributors_enabled": false,
                "is_translator": false,
                "is_translation_enabled": false,
                "profile_background_color": "000000",
                "profile_background_image_url": "http://abs.twimg.com/images/themes/theme1/bg.png",
                "profile_background_image_url_https": "https://abs.twimg.com/images/themes/theme1/bg.png",
                "profile_background_tile": false,
                "profile_image_url": "http://abs.twimg.com/sticky/default_profile_images/default_profile_5_normal.png",
                "profile_image_url_https": "https://abs.twimg.com/sticky/default_profile_images/default_profile_5_normal.png",
                "profile_link_color": "E81C4F",
                "profile_sidebar_border_color": "000000",
                "profile_sidebar_fill_color": "000000",
                "profile_text_color": "000000",
                "profile_use_background_image": false,
                "has_extended_profile": false,
                "default_profile": false,
                "default_profile_image": true,
                "following": false,
                "follow_request_sent": false,
                "notifications": false
              },
              "geo": null,
              "coordinates": null,
              "place": null,
              "contributors": null,
              "is_quote_status": false,
              "retweet_count": 0,
              "favorite_count": 0,
              "favorited": false,
              "retweeted": false,
              "lang": "en"
            }
        </code></pre>
        <p> Okay, you didn't freak out, did you...? We are not going through that whole thing nor will we be using much of it. I'm going to draw your attention to what we <i>will</i> be using.</p>

        <p>I want to draw your attention to the bits that we will be using.</p>
       <pre><code>
            "user":  {
                "id": 731282217935208400,
                "id_str": "731282217935208448",
                "name": "theabrasivebot",
                "screen_name": "theAbrasiveBot",
                "location": "Scranton, PA",
                "description": "a very angry, temperamental robot",
                "url": null,
                "entities":  {
                  "description":  {
                    "urls":  []
                  }
                },
        </code></pre>
        <p>This is some of the information about the specific Twitter account that created this tweet. Most of the attributes should be self-explanatory. id and id_str are very similar. The only difference is that "id" is an integer" and "id_str" is a string containing an integer.</p>

        <p>Now, here is an image of the actual tweet</p>
        <img src="/static/images/twitstat.png" style="max-width: 75%">
        <p>Here is what is more relabent to us. Notice the similarities between the image of the tweet and the JSON response below.</p>
        <pre><code>
            {
              "created_at": "Tue May 17 15:35:41 +0000 2016",
              "id": 732595450746970100,
              "id_str": "732595450746970112",
              "text": "AN ANGRY TEST.",
              "truncated": false,
              "entities":  {
                "hashtags":  [],
                "symbols":  [],
                "user_mentions":  [],
                "urls":  []
            },
        </code></pre>
        <p>For our purposes we are just interested in both the "text" attribute which contains the text contained in the tweet, and the "id_str" attribute which is a completely unique to this specific tweet.</p>

        <h3>Parsing Out Specific Data from a JSON Request</h3>
        <p>We now are going to construct a simple function that will just return the name and screen name of the user, and the id_str and content of a tweet.</p>



        <a class="button button-primary" href="/api-part2">Previous</a>
        <a class="button button-primary" href="/api-part4">Next</a>

    </div>
</div>